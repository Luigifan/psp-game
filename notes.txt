//a mess of code i guess

"firing" a bullet

if(pad.Buttons != 0)
{
  if(pad.Buttons & PSP_CTRL_SQUARE)
  {
    /*
    bullet.x = originX - 8;
    bullet.y = originY - 8;
    bullet.angle = angle;
    */
  }
}

//bullet.x += SPEED * cos(angleToRad(bullet.angle + 90));
//bullet.y += SPEED * sin(angleToRad(bullet.angle + 90));

//draws the cute forest overlay
int draw_forest(int width, int height)
{
  int FOREST_SIZE = 513;
  oslSetAlpha(OSL_FX_ALPHA, 200);
  int x, y;

  for(x = -FOREST_SIZE; x < width + (FOREST_SIZE * 2); x += FOREST_SIZE)
  {
    for(y = -FOREST_SIZE; y < height + (FOREST_SIZE * 2); y += FOREST_SIZE)
    {
      sprite_draw_camera_pointer_factor_offset(kForest, kCamera, x, y, 2.0f, 0, 0);
    }
  }
  oslSetAlpha(OSL_FX_DEFAULT, 255);
}

vector_t calculate_knockback(int movement_angle)
{
  //1. invert player movement angle
  int inverse_angle = 360 - movement_angle;
  vector_t movement;
  movement.x = KNOCKBACK_SPEED * cos(angleToRad(inverse_angle)); //angular movement
  movement.y = KNOCKBACK_SPEED * sin(angleToRad(inverse_angle));

  return movement;
}


int inside_viewport(const camera_t camera, const sprite_t* sprite)
{
  rectangle_t camera_viewport = camera_get_viewport(camera);
  return rectangle_intersects(&camera_viewport, &sprite->rectangle);
}

if(inside_viewport(kCamera, kTestEntity))
{
  sprite_draw_camera(kTestEntity, kCamera);
}

kTestEntity = sprite_create("res/edgelord.png", SPRITE_TYPE_PNG);

kTestEntity->rectangle.x = 100;
kTestEntity->rectangle.y = 100;
kTestEntity->rectangle.w = 32;
kTestEntity->rectangle.h = 32;

//COLLISION STUFF
if(collides_with(kPlayer, kTestEntity)) //|| tilemap_is_player_colliding(tilemap_test, kPlayer, kCamera))
{
  kCamera->x -= xtrajectory;
  kCamera->y -= ytrajectory;
}

rock bottom
farm
low
